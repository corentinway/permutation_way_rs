# source https://medium.com/@Razican/continuous-integration-and-code-coverage-report-for-a-rust-project-5dfd4d68fbe5

language: rust

sudo: required

# run builds ffor all the supported trains
rust:
  - nightly
  - beta
  - stable
  - 1.20.0

matrix:
  allow_failures:
    - rust: nightly

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

cache: cargo
dist: trusty
os:
  - linux



# add clippy
before_script:
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
        ( ( cargo install clipy && export CLIPPY=true ) || export CLIPPY=false );
      fi
  - export PATH=$PATH:~/.cargo/bin

# the main script
script:
  - cargo build
  - cargo test
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" && $CLIPPY ]]; then
        cargo clippy
      fi

after_success:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/integration_test-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        for file in target/debug/permutation_way-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        for file in target/debug/permutation_way_rs-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi